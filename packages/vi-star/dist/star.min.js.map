{"version":3,"file":"star.min.js","sources":["../src/star.vue","../index.js"],"sourcesContent":["<template>\r\n  <div class=\"universe-bg\" ref=\"universeDiv\">\r\n    <canvas ref=\"canvas\" :width=\"canvasWidth\" :height=\"canvasHeight\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  //外部可以看情况传入  宽、高、透明度、层级\r\n  props: {\r\n    width: {\r\n      type: Number, // 数据类型为数组\r\n      required: false,\r\n      default: window.innerWidth // 设置默认值为\r\n    },\r\n    height: {\r\n      type: Number, // 数据类型为数组\r\n      required: false, // 传递\r\n      default: window.innerHeight // 设置默认值为\r\n    },\r\n    // 透明度\r\n    opacity: {\r\n      type: Number, // 数据类型为数组\r\n      required: false, // 传递\r\n      default: 0.4 // 设置默认值为\r\n    },\r\n    // z-index\r\n    zIndex: {\r\n      type: Number, // 数据类型为数组\r\n      required: false, // 传递\r\n      default: -1 // 设置默认值为-1\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      canvasWidth: '',\r\n      canvasHeight: ''\r\n    }\r\n  },\r\n  created() {\r\n    this.canvasWidth = this.width //这是canvas自带的宽高\r\n    this.canvasHeight = this.height\r\n  },\r\n  mounted() {\r\n    this.$refs.universeDiv.style.opacity = this.opacity\r\n    this.$refs.universeDiv.style['z-index'] = this.zIndex // 设置新的z-index值\r\n\r\n    const canvas = this.$refs.canvas\r\n    const ctx = canvas.getContext('2d')\r\n    const w = canvas.width\r\n    const h = canvas.height\r\n    const hue = 217\r\n    const stars = []\r\n    let count = 0\r\n    const maxStars = 1300\r\n\r\n    const canvas2 = document.createElement('canvas')\r\n    const ctx2 = canvas2.getContext('2d')\r\n    canvas2.width = 100\r\n    canvas2.height = 100\r\n    const half = canvas2.width / 2\r\n    const gradient2 = ctx2.createRadialGradient(half, half, 0, half, half, half)\r\n    gradient2.addColorStop(0.025, '#CCC')\r\n    gradient2.addColorStop(0.1, `hsl(${hue}, 61%, 33%)`)\r\n    gradient2.addColorStop(0.25, `hsl(${hue}, 64%, 6%)`)\r\n    gradient2.addColorStop(1, 'transparent')\r\n\r\n    ctx2.fillStyle = gradient2\r\n    ctx2.beginPath()\r\n    ctx2.arc(half, half, half, 0, Math.PI * 2)\r\n    ctx2.fill()\r\n\r\n    function random(min, max) {\r\n      if (arguments.length < 2) {\r\n        max = min\r\n        min = 0\r\n      }\r\n\r\n      if (min > max) {\r\n        let hold = max\r\n        max = min\r\n        min = hold\r\n      }\r\n\r\n      return Math.floor(Math.random() * (max - min + 1)) + min\r\n    }\r\n\r\n    function maxOrbit(x, y) {\r\n      const max = Math.max(x, y)\r\n      const diameter = Math.round(Math.sqrt(max * max + max * max))\r\n      return diameter / 2\r\n    }\r\n\r\n    const Star = function () {\r\n      this.orbitRadius = random(maxOrbit(w, h))\r\n      this.radius = random(60, this.orbitRadius) / 8\r\n      this.orbitX = w / 2\r\n      this.orbitY = h / 2\r\n      this.timePassed = random(0, maxStars)\r\n      this.speed = random(this.orbitRadius) / 1000000\r\n      this.alpha = random(2, 10) / 1000\r\n\r\n      count++\r\n      stars[count] = this\r\n    }\r\n\r\n    Star.prototype.draw = function () {\r\n      const x = Math.sin(this.timePassed) * this.orbitRadius + this.orbitX\r\n      const y = Math.cos(this.timePassed) * this.orbitRadius + this.orbitY\r\n      const twinkle = random(10)\r\n\r\n      if (twinkle === 1 && this.alpha > 0) {\r\n        this.alpha -= 0.05\r\n      } else if (twinkle === 2 && this.alpha < 1) {\r\n        this.alpha += 0.05\r\n      }\r\n\r\n      ctx.globalAlpha = this.alpha\r\n      ctx.drawImage(canvas2, x - this.radius / 2, y - this.radius / 2, this.radius, this.radius)\r\n      this.timePassed += this.speed\r\n    }\r\n\r\n    for (let i = 0; i < maxStars; i++) {\r\n      new Star()\r\n    }\r\n\r\n    function animation() {\r\n      ctx.globalCompositeOperation = 'source-over'\r\n      ctx.globalAlpha = 0.5\r\n      ctx.fillStyle = `hsla(${hue}, 64%, 6%, 2)`\r\n      ctx.fillRect(0, 0, w, h)\r\n\r\n      ctx.globalCompositeOperation = 'lighter'\r\n      for (let i = 1, l = stars.length; i < l; i++) {\r\n        stars[i].draw()\r\n      }\r\n\r\n      window.requestAnimationFrame(animation)\r\n    }\r\n\r\n    animation()\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.universe-bg {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>\r\n","import star from './src/star'\n\nstar.install = function (Vue) {\n  Vue.component(star.name, star)\n}\n\nexport default star\n"],"names":["__vue_script__","props","width","type","Number","required","default","window","innerWidth","height","innerHeight","opacity","zIndex","data","canvasWidth","canvasHeight","created","this","mounted","$refs","universeDiv","style","canvas","ctx","getContext","w","h","stars","count","canvas2","document","createElement","ctx2","half","gradient2","createRadialGradient","random","min","max","arguments","length","hold","Math","floor","addColorStop","fillStyle","beginPath","arc","PI","fill","Star","orbitRadius","x","y","round","sqrt","maxOrbit","radius","orbitX","orbitY","timePassed","speed","alpha","prototype","draw","sin","cos","twinkle","globalAlpha","drawImage","i","animation","globalCompositeOperation","fillRect","l","requestAnimationFrame","star","install","Vue","component","name"],"mappings":"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"}